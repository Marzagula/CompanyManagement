version: '3'
services:
  eureka-server:
    build: ./eureka-server  # Budowanie obrazu z katalogu eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  auth-server:
    build: ./auth-server  # Budowanie obrazu z katalogu auth-server
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.datasource.url=jdbc:postgresql://db:5432/postgres

    depends_on:
      - eureka-server

  employee-service:
    build: ./employee-service  # Budowanie obrazu z katalogu employee-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.datasource.url=jdbc:postgresql://db:5432/postgres

    depends_on:
      - eureka-server

  accounting-service:
    build: ./accounting-service  # Budowanie obrazu z katalogu accounting-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.datasource.url=jdbc:postgresql://db:5432/postgres
      - CM_DB_USERNAME=${CM_DB_USERNAME}
      - CM_DB_PASSWORD=${CM_DB_PASSWORD}

    depends_on:
      - eureka-server

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${CM_DB_USERNAME}
      POSTGRES_PASSWORD: ${CM_DB_PASSWORD}
    ports:
      - "5432:5432"

  accounting-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${CM_DB_USERNAME}
      POSTGRES_PASSWORD: ${CM_DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - accounting_db_data:/var/lib/postgresql/data
      - ./database/accounting/:/docker-entrypoint-initdb.d/

volumes:
  accounting_db_data: